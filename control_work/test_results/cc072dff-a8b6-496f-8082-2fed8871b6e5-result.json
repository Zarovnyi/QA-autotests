{"name": "test_buy_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=111.0.5563.111)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x002ADCE3]\n\t(No symbol) [0x002439D1]\n\t(No symbol) [0x00154DA8]\n\t(No symbol) [0x0013D0D3]\n\t(No symbol) [0x0019EA8B]\n\t(No symbol) [0x001AD093]\n\t(No symbol) [0x0019ACC6]\n\t(No symbol) [0x00176F68]\n\t(No symbol) [0x001780CD]\n\tGetHandleVerifier [0x00523832+2506274]\n\tGetHandleVerifier [0x00559794+2727300]\n\tGetHandleVerifier [0x0055E36C+2746716]\n\tGetHandleVerifier [0x00356690+617600]\n\t(No symbol) [0x0024C712]\n\t(No symbol) [0x00251FF8]\n\t(No symbol) [0x002520DB]\n\t(No symbol) [0x0025C63B]\n\tBaseThreadInitThunk [0x76F2FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x772D7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x772D7A6E+238]\n\t(No symbol) [0x00000000]", "trace": "set_up = None, set_group = None\n\n    @allure.description(\"Test buy product\")\n    def test_buy_product(set_up, set_group):\n    \n        options = Options()          #убираем знаки в терминале\n        options.add_experimental_option(\"excludeSwitches\", ['enadle-logging'])\n    \n        driver = webdriver.Chrome(executable_path='D:\\\\Python\\\\resource\\\\chromedriver.exe', chrome_options = options)\n    \n        print(\"Start Test 1\")\n    \n        mp = Main_page(driver) # Выбираем товара с главной страницы\n        mp.select_product()\n    \n        ps = Product_selection(driver) # Выбираем первый товар\n        ps.select_product1()\n    \n        pp = Product_page(driver) # На странице товара подтверждаем\n        pp.select_product_page()\n    \n        cp = Cart_page(driver)     # В корзине проверяем цену и удаляем товар\n        cp.product_confirmation()\n    \n        ci = Login_page(driver)  # авторизация переходим в корзину через личный кабинет\n        ci.authorization()\n    \n        cp = Cart_page(driver) # товар удален и корзина пуста\n>       cp.delet_product()\n\ntests\\test_buy_product.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\cart_page.py:143: in delet_product\n    self.get_assert_word(self.get_assert_delete(), \"Ваша корзина пока пуста.\")\npages\\cart_page.py:52: in get_assert_delete\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, self.assert_delete)))\nC:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:78: in until\n    value = method(self._driver)\nC:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:326: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nC:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1248: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nC:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024A6C4E8CA0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...jectPath [0x772D7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x772D7A6E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=111.0.5563.111)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x002ADCE3]\nE       \t(No symbol) [0x002439D1]\nE       \t(No symbol) [0x00154DA8]\nE       \t(No symbol) [0x0013D0D3]\nE       \t(No symbol) [0x0019EA8B]\nE       \t(No symbol) [0x001AD093]\nE       \t(No symbol) [0x0019ACC6]\nE       \t(No symbol) [0x00176F68]\nE       \t(No symbol) [0x001780CD]\nE       \tGetHandleVerifier [0x00523832+2506274]\nE       \tGetHandleVerifier [0x00559794+2727300]\nE       \tGetHandleVerifier [0x0055E36C+2746716]\nE       \tGetHandleVerifier [0x00356690+617600]\nE       \t(No symbol) [0x0024C712]\nE       \t(No symbol) [0x00251FF8]\nE       \t(No symbol) [0x002520DB]\nE       \t(No symbol) [0x0025C63B]\nE       \tBaseThreadInitThunk [0x76F2FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x772D7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x772D7A6E+238]\nE       \t(No symbol) [0x00000000]\n\nC:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchWindowException"}, "description": "Test buy product", "steps": [{"name": "Select product main page", "status": "passed", "start": 1680032809944, "stop": 1680032815627}, {"name": "Select product1", "status": "passed", "start": 1680032815628, "stop": 1680032817446}, {"name": "Select product page", "status": "passed", "start": 1680032817446, "stop": 1680032826934}, {"name": "Product confirmation", "status": "passed", "start": 1680032826934, "stop": 1680032831607}, {"name": "Authorization", "status": "passed", "start": 1680032831607, "stop": 1680032844046}, {"name": "Delet product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=111.0.5563.111)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x002ADCE3]\n\t(No symbol) [0x002439D1]\n\t(No symbol) [0x00154DA8]\n\t(No symbol) [0x0013D0D3]\n\t(No symbol) [0x0019EA8B]\n\t(No symbol) [0x001AD093]\n\t(No symbol) [0x0019ACC6]\n\t(No symbol) [0x00176F68]\n\t(No symbol) [0x001780CD]\n\tGetHandleVerifier [0x00523832+2506274]\n\tGetHandleVerifier [0x00559794+2727300]\n\tGetHandleVerifier [0x0055E36C+2746716]\n\tGetHandleVerifier [0x00356690+617600]\n\t(No symbol) [0x0024C712]\n\t(No symbol) [0x00251FF8]\n\t(No symbol) [0x002520DB]\n\t(No symbol) [0x0025C63B]\n\tBaseThreadInitThunk [0x76F2FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x772D7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x772D7A6E+238]\n\t(No symbol) [0x00000000]\n\n", "trace": "  File \"D:\\Python\\control_work\\pages\\cart_page.py\", line 143, in delet_product\n    self.get_assert_word(self.get_assert_delete(), \"Ваша корзина пока пуста.\")\n  File \"D:\\Python\\control_work\\pages\\cart_page.py\", line 52, in get_assert_delete\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, self.assert_delete)))\n  File \"C:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 78, in until\n    value = method(self._driver)\n  File \"C:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 326, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n  File \"C:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1248, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"C:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 425, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\X\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1680032844047, "stop": 1680032859035}], "attachments": [{"name": "stdout", "source": "c358ccfa-1ec6-43fd-b560-54d3d59be84d-attachment.txt", "type": "text/plain"}], "start": 1680032808261, "stop": 1680032859104, "uuid": "aa50d7ae-0bd7-46b5-b07a-f50d314755c7", "historyId": "63e9e0b072a045a42b46a9fee7128ac4", "testCaseId": "22557127bd8e5c9d27d61f44787213b8", "fullName": "tests.test_buy_product#test_buy_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "HOME-PC"}, {"name": "thread", "value": "1664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}